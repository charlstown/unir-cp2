- name: Deploy Podman Container with ACR
  hosts: azure_vm
  become: yes
  tasks:

    # ✅ Asegurarse de que el sistema esté actualizado
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: yes

    # ✅ Instalar Podman y Apache Utils (para htpasswd)
    - name: Install Podman and Apache Utils
      apt:
        name:
          - podman
          - apache2-utils  # Necesario para htpasswd
        state: present

    # ✅ Crear directorio para credenciales en la VM
    - name: Ensure authentication directory exists
      file:
        path: /etc/nginx/auth
        state: directory
        mode: '0755'

    # ✅ Cargar variables seguras desde archivo secrets.yml
    - name: Load secure variables
      include_vars: secrets.yml

    # ✅ Generar archivo htpasswd con usuario "admin" y una contraseña definida en variables
    - name: Generate htpasswd file
      command: htpasswd -bc /etc/nginx/auth/htpasswd.users charlstown "{{ site_pwd }}"
      args:
        creates: /etc/nginx/auth/htpasswd.users

    # ✅ Iniciar sesión en Azure Container Registry (ACR)
    - name: Log into Azure Container Registry (ACR)
      containers.podman.podman_login:
        registry: "{{ acr_name }}.azurecr.io"
        username: "{{ acr_username }}"
        password: "{{ acr_password }}"

    # ✅ Descargar la imagen del contenedor desde ACR
    - name: Pull container image from ACR
      containers.podman.podman_image:
        name: "{{ acr_name }}.azurecr.io/{{ image_name }}"
        tag: "{{ image_tag }}"
        state: present

    # ✅ Ejecutar el contenedor con SSL y autenticación básica
    - name: Run container from ACR image with SSL and Basic Auth
      containers.podman.podman_container:
        name: mkdocs_container
        image: "{{ acr_name }}.azurecr.io/{{ image_name }}:{{ image_tag }}"
        state: started
        restart_policy: always
        ports:
          - "443:443"
        volume:
          - "/etc/nginx/auth/htpasswd.users:/etc/nginx/.htpasswd:ro"

    # ✅ Generar un servicio systemd para hacer el contenedor persistente
    - name: Generate systemd service for Podman container
      containers.podman.podman_generate_systemd:
        name: mkdocs_container
        dest: /etc/systemd/system/
        restart_policy: always

    # ✅ Habilitar y arrancar el servicio systemd para que se inicie en cada reinicio
    - name: Enable and start Podman container systemd service
      systemd:
        name: container-mkdocs_container
        enabled: yes
        state: started
        daemon_reload: yes
