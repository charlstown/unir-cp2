name: Publish docs to ACR

on:
  workflow_dispatch:  # Permite ejecución manual
    inputs:
      acr_name:
        description: "Azure Container Registry Name"
        required: true
        default: "acrweucp2dev"
      acr_username:
        description: "Azure Container Registry Username"
        required: true
        default: "acrweucp2dev"
      acr_password:
        description: "Azure Container Registry Password"
        required: true
        type: string
      image_name:
        description: "Container Image Name"
        required: true
        default: "mkdocs-nginx"
      tag_name:
        description: "Tag Name"
        required: true
        default: "casopractico2"
        
env:
  ACR_NAME: ${{ github.event.inputs.acr_name }}
  IMAGE_NAME: ${{ github.event.inputs.image_name }}
  TAG: ${{ github.event.inputs.tag_name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      
      # ✅ Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # ✅ Iniciar sesión en Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ✅ Iniciar sesión en ACR
      - name: Log in to Azure Container Registry
        run: |
          az acr login --name $ACR_NAME

      # ✅ Instalar MkDocs
      - name: Install MkDocs
        run: |
          pip install -r requirements.txt
          mkdocs build

      # ✅ Construir imagen Docker con el sitio MkDocs dentro de Nginx
      - name: Build Docker Image
        run: |
          docker build -t $ACR_NAME/$IMAGE_NAME:$TAG .

      # ✅ Subir imagen a ACR
      - name: Push Image to ACR
        run: |
          docker push $ACR_NAME/$IMAGE_NAME:$TAG
