name: Publish release to ACR

on:
  workflow_dispatch:
    inputs:
      acr_name:
        description: "Azure Container Registry Name"
        required: true
        default: "acrdevweucp2"
      acr_username:
        description: "Azure Container Registry Username"
        required: true
      acr_password:
        description: "Azure Container Registry Password"
        required: true
        type: string
      image_name:
        description: "Container Image Name"
        required: true
        default: "mkdocs-nginx"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      
      # ✅ Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # ✅ Obtener la versión de la publicación de GitHub (Si se activa por una publicación)
      - name: Get Release Version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "RELEASE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          fi

      # ✅ Instalar Podman
      - name: Install Podman
        run: |
          sudo apt update
          sudo apt install -y podman

      # ✅ Iniciar sesión en ACR con Podman
      - name: Log in to Azure Container Registry
        run: |
          echo "${{ github.event.inputs.acr_password }}" | podman login ${{ github.event.inputs.acr_name }}.azurecr.io -u ${{ github.event.inputs.acr_username }} --password-stdin

      # ✅ Instalar MkDocs y construir el sitio
      - name: Install MkDocs & Build Docs
        run: |
          pip install -r requirements.txt
          mkdocs build

      # ✅ Crear Dockerfile para Nginx sirviendo el sitio MkDocs
      - name: Create Dockerfile
        run: |
          echo 'FROM nginx:latest' > Dockerfile
          echo 'COPY site/ /usr/share/nginx/html/' >> Dockerfile
          echo 'EXPOSE 80' >> Dockerfile

      # ✅ Construir imagen con Podman
      - name: Build Container Image with Podman
        run: |
          podman build -t ${{ github.event.inputs.acr_name }}.azurecr.io/${{ github.event.inputs.image_name }}:$RELEASE_TAG .

      # ✅ Subir imagen a ACR con Podman
      - name: Push Image to ACR with Podman
        run: |
          podman push ${{ github.event.inputs.acr_name }}.azurecr.io/${{ github.event.inputs.image_name }}:$RELEASE_TAG
